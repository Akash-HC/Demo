pipeline {
    agent any

    environment {
        IMAGE_NAME = "akashhc55/hello-argocd"
        IMAGE_TAG = "${BUILD_NUMBER}"
        DOCKER_IMAGE = "${IMAGE_NAME}:${IMAGE_TAG}"
        GIT_REPO = "https://github.com/Akash-HC/ArgoCD-Test"
        YAML_FILE = "test-poc/deployment.yaml"
    }

    stages {
        stage('Build Docker Image') {
            steps {
                dir('node-js-app') {
                    sh 'docker build -t $DOCKER_IMAGE .'
                }
            }
        }

        stage('Push to Docker Hub') {
            steps {
                withCredentials([usernamePassword(
                    credentialsId: 'docker-hub-creds-new',
                    usernameVariable: 'DOCKER_USER',
                    passwordVariable: 'DOCKER_PASS'
                )]) {
                    sh '''
                        echo "$DOCKER_PASS" | docker login -u "$DOCKER_USER" --password-stdin https://index.docker.io/v1/
                        docker push $DOCKER_IMAGE
                    '''
                }
            }
        }

        stage('Update Kubernetes Manifests') {
            steps {
                withCredentials([usernamePassword(
                    credentialsId: 'git-creds-id',
                    usernameVariable: 'GIT_USERNAME',
                    passwordVariable: 'GIT_PASSWORD'
                )]) {
                    sh '''
                        rm -rf argo-repo
                        git clone https://${GIT_USERNAME}:${GIT_PASSWORD}@github.com/Akash-HC/ArgoCD-Test.git argo-repo
                    '''

                    dir('argo-repo') {
                        script {
                            def content = readFile(file: YAML_FILE)
                            def updated = content.replaceAll("image: .*", "image: ${DOCKER_IMAGE}")
                            writeFile(file: YAML_FILE, text: updated)
                        }

                        sh '''
                            git config user.email "akashchalkodu@gmail.com"
                            git config user.name "Akash-HC"
                            git add ${YAML_FILE}
                            git diff --cached --quiet || git commit -m "Update image to ${DOCKER_IMAGE}"
                            git push origin main
                        '''
                    }
                }
            }
        }
    }

    post {
        failure {
            echo "❌ Pipeline failed. Please check the console output."
        }
        success {
            echo "✅ Pipeline completed successfully! Image pushed: $DOCKER_IMAGE"
        }
    }
}
