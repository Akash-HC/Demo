pipeline {
    agent any

    environment {
        DOCKER_IMAGE = "akashhc55/hello-argocd:latest"
        GIT_REPO = "https://github.com/Akash-HC/ArgoCD-Test"
        YAML_FILE = "test-poc/deployment.yaml"
    }

    stages {
        stage('Build Docker Image') {
            steps {
                dir('node-js-app') {
                    sh 'docker build -t $DOCKER_IMAGE .'
                }
            }
        }

        stage('Push to Docker Hub') {
            steps {
                script {
                    withCredentials([usernamePassword(
                        credentialsId: 'docker-hub-creds',
                        usernameVariable: 'DOCKER_USER',
                        passwordVariable: 'DOCKER_PASS'
                    )]) {
                        sh '''
                            echo "$DOCKER_PASS" | docker login -u "$DOCKER_USER" --password-stdin https://index.docker.io/v1/
                            docker push $DOCKER_IMAGE
                        '''
                    }
                }
            }
        }

        stage('Update Kubernetes Manifests') {
            steps {
                dir('gitops-manifests') {
                    git credentialsId: 'git-creds-id', url: "${GIT_REPO}", branch: 'main'

                    script {
                        def content = readFile(file: YAML_FILE)
                        def updated = content.replaceAll("image: .*", "image: ${DOCKER_IMAGE}")
                        writeFile(file: YAML_FILE, text: updated)
                    }

                    script {
                        sh '''
                            git config user.email "akashchalkodu@gmail.com"
                            git config user.name "Akash-HC"
                            git add ${YAML_FILE}
                            git diff --cached --quiet || git commit -m "Update image to ${DOCKER_IMAGE}"
                            git push origin main
                        '''
                    }
                }
            }
        }
    }

    post {
        failure {
            echo "❌ Pipeline failed. Please check the console output."
        }
        success {
            echo "✅ Pipeline completed successfully!"
        }
    }
}
